// Copyright 2019 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: DmlExtension.proto

/*
Package dml is a generated protocol buffer package.

It is generated from these files:
	DmlExtension.proto

It has these top-level messages:
	DateTime
	Decimal
	Guid
*/
package dml

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DateTime struct {
	Milliseconds int64 `protobuf:"varint,1,opt,name=milliseconds" json:"milliseconds,omitempty"`
}

func (m *DateTime) Reset()                    { *m = DateTime{} }
func (m *DateTime) String() string            { return proto.CompactTextString(m) }
func (*DateTime) ProtoMessage()               {}
func (*DateTime) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DateTime) GetMilliseconds() int64 {
	if m != nil {
		return m.Milliseconds
	}
	return 0
}

type Decimal struct {
	Plaintext string `protobuf:"bytes,1,opt,name=plaintext" json:"plaintext,omitempty"`
}

func (m *Decimal) Reset()                    { *m = Decimal{} }
func (m *Decimal) String() string            { return proto.CompactTextString(m) }
func (*Decimal) ProtoMessage()               {}
func (*Decimal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Decimal) GetPlaintext() string {
	if m != nil {
		return m.Plaintext
	}
	return ""
}

type Guid struct {
	Guid []byte `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (m *Guid) Reset()                    { *m = Guid{} }
func (m *Guid) String() string            { return proto.CompactTextString(m) }
func (*Guid) ProtoMessage()               {}
func (*Guid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Guid) GetGuid() []byte {
	if m != nil {
		return m.Guid
	}
	return nil
}

func init() {
	proto.RegisterType((*DateTime)(nil), "dml.DateTime")
	proto.RegisterType((*Decimal)(nil), "dml.Decimal")
	proto.RegisterType((*Guid)(nil), "dml.Guid")
}

func init() { proto.RegisterFile("DmlExtension.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x72, 0xc9, 0xcd, 0x71,
	0xad, 0x28, 0x49, 0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x4e, 0xc9, 0xcd, 0x51, 0xd2, 0xe3, 0xe2, 0x70, 0x49, 0x2c, 0x49, 0x0d, 0xc9, 0xcc, 0x4d, 0x15,
	0x52, 0xe2, 0xe2, 0xc9, 0xcd, 0xcc, 0xc9, 0xc9, 0x2c, 0x4e, 0x4d, 0xce, 0xcf, 0x4b, 0x29, 0x96,
	0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x42, 0x11, 0x53, 0x52, 0xe7, 0x62, 0x77, 0x49, 0x4d, 0xce,
	0xcc, 0x4d, 0xcc, 0x11, 0x92, 0xe1, 0xe2, 0x2c, 0xc8, 0x49, 0xcc, 0xcc, 0x2b, 0x49, 0xad, 0x28,
	0x01, 0xab, 0xe5, 0x0c, 0x42, 0x08, 0x28, 0x49, 0x71, 0xb1, 0xb8, 0x97, 0x66, 0xa6, 0x08, 0x09,
	0x71, 0xb1, 0xa4, 0x97, 0x66, 0xa6, 0x80, 0x15, 0xf0, 0x04, 0x81, 0xd9, 0x49, 0x6c, 0x60, 0x07,
	0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x47, 0x4b, 0xd7, 0x2f, 0x96, 0x00, 0x00, 0x00,
}
